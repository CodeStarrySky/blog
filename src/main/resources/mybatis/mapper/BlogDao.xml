<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wch.blog.dao.BlogDao">
   <resultMap id="BlogMap" type="com.wch.blog.bean.Blog">
       <id              property="id"                 column="id"                jdbcType="BIGINT"></id>
       <result          property="title"             column="title"             jdbcType="VARCHAR"></result>
       <result          property="content"           column="content"           jdbcType="LONGVARCHAR"></result>
       <result          property="firstFigure"       column="first_figure"     jdbcType="VARCHAR"></result>
       <result          property="ifOriginal"        column="if_original"      jdbcType="BIT"></result>
       <result          property="views"              column="views"             jdbcType="INTEGER"></result>
       <result          property="appreciates"       column="appreciates"       jdbcType="BIT"></result>
       <result          property="shareStatement"    column="share_statement"   jdbcType="BIT"></result>
       <result          property="commentabled"      column="commentabled"      jdbcType="BIT"></result>
       <result          property="published"         column="published"          jdbcType="BIT"></result>
       <result          property="recommend"         column="recommend"          jdbcType="BIT"></result>
       <result          property="createTime"        column="create_time"        ></result>
       <result          property="updateTime"        column="update_time"      ></result>
       <result          property="flag"               column="flag"               jdbcType="VARCHAR"></result>
       <association     property="user"              column="user_id"     select="com.wch.blog.dao.UserDao.selectById"    fetchType="lazy"></association>
       <association     property="type"              column="type_id"     select="com.wch.blog.dao.TypeDao.selectById"    fetchType="lazy"></association>
<!--       <collection      property="comments"          column="id"     ofType="com.wch.blog.bean.Comment"      select="com.wch.blog.dao.CommentDao.selectByBlogId"  fetchType="lazy"></collection>-->
       <collection      property="tags"              column="id"     ofType="com.wch.blog.bean.Tag"           select="com.wch.blog.dao.BlogTagDao.selectByBlogId" fetchType="lazy"></collection>
   </resultMap>
    <sql id="ifNullSql">
        <if  test="title!=null"> title=#{title},</if>
        <if  test="content!=null"> content=#{content},</if>
        <if  test="firstFigure!=null"> first_figure=#{firstFigure},</if>
        <if  test="ifOriginal!=null"> if_original=#{ifOriginal},</if>
        <if  test="appreciates!=null"> appreciates=#{appreciates},</if>
        <if  test="shareStatement!=null"> share_statement=#{shareStatement},</if>
        <if  test="commentabled!=null"> commentabled=#{commentabled},</if>
        <if  test="published!=null"> published=#{published},</if>
        <if  test="recommend!=null"> recommend=#{recommend},</if>
        <if  test="updateTime!=null"> update_time=#{updateTime},</if>
         <if test="type.id!=null">type_id=#{type.id}</if>
    </sql>
    <resultMap id="ByUserBlog" type="com.wch.blog.bean.Blog">
        <id              property="id"                 column="id"                jdbcType="BIGINT"></id>
        <result          property="title"             column="title"             jdbcType="VARCHAR"></result>
    </resultMap>
    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="ByUserBlog">
        select id,title from blog where flag=1 and user_id=#{userId} order by update_time desc
    </select>

    <select id="selectAll" resultMap="BlogMap">
        select * from blog where flag=1 order by update_time desc
    </select>
    <select id="selectByBlog" parameterType="com.wch.blog.bean.Blog" resultMap="BlogMap">
        select * from blog
        <where>
            flag=1
            <if test="title!=null">and title like '%${title}%'</if>
            <if test="type!=null">and type_id=#{type.id}</if>
            <if test="recommend!=false">and recommend=#{recommend}</if>
        </where>
        order by update_time desc

    </select>

    <select id="selectById" resultMap="BlogMap" parameterType="java.lang.Long">
        select * from blog where flag=1 and id=#{id}
    </select>

    <select id="selectByTitle" resultMap="BlogMap" parameterType="java.lang.String">
        select * from blog where flag=1 and title=#{title}
    </select>

    <update id="updateBlog" parameterType="com.wch.blog.bean.Blog" >
        update blog
        <set>
            <include refid="ifNullSql"></include>
        </set>
        where id=#{id}
    </update>
    <insert id="saveBlog" parameterType="com.wch.blog.bean.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into blog(title,content,first_figure,if_original,views,appreciates,share_statement,commentabled,published,recommend,create_time,update_time,flag,type_id,user_id)
                            values (#{blog.title},#{blog.content},#{blog.firstFigure},
                                    #{blog.ifOriginal},#{blog.views},#{blog.appreciates},#{blog.shareStatement},
                                    #{blog.commentabled},#{blog.published},#{blog.recommend},#{blog.createTime},#{blog.updateTime},#{blog.flag},#{blog.type.id},#{blog.user.id});
    </insert>
    <insert id="saveBatchBlogTag">
        insert into blog_tag(blog_id,tag_id) values
        <foreach collection="blogTags" item="blogTag" separator=",">
            (#{blogTag.blogId},#{blogTag.tagId})
        </foreach>
    </insert>
    <update id="deleteById" parameterType="java.lang.Long">
        update blog set flag=0 where id=#{id};
    </update>
    
    <update id="updateBatchBlogTag">
       update blog_tag
       <trim prefix="set" suffixOverrides=",">
           <trim prefix="tag_id=case" suffix="end," >
               <foreach collection="blogTags" item="blogTag" index="index">
                   <if test = "blogTag!=null">
                       when id=#{blogTag.id} then #{blogTag.tagId}
                   </if>
               </foreach>
           </trim>
       </trim>
       where
        <foreach collection="blogTags" separator="or" item="blogTag" index="index">
            id=#{blogTag.id}
        </foreach>
    </update>

    <select id="selectBlogTagByBlogId" resultMap="com.wch.blog.dao.BlogTagDao.BlogTagMap">
        select * from blog_tag where blog_id=#{blogId};
    </select>

    <delete id="deleteBlogTagByBlogId" parameterType="java.lang.Long">
        delete from blog_tag where blog_id=#{blogId}
    </delete>


</mapper>